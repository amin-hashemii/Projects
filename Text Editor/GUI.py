# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import os
import threading

class Ui_TextEditor(object):
    def setupUi(self, TextEditor):
        TextEditor.setObjectName("TextEditor")
        TextEditor.resize(804, 434)
        self.centralwidget = QtWidgets.QWidget(TextEditor)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setObjectName("textEdit")
        self.verticalLayout.addWidget(self.textEdit)
        TextEditor.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(TextEditor)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 804, 21))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        TextEditor.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(TextEditor)
        self.statusbar.setObjectName("statusbar")
        TextEditor.setStatusBar(self.statusbar)
        self.actionSave = QtWidgets.QAction(TextEditor)
        self.actionSave.setObjectName("actionSave")
        self.actionSave_as = QtWidgets.QAction(TextEditor)
        self.actionSave_as.setObjectName("actionSave_as")
        self.actionOpen = QtWidgets.QAction(TextEditor)
        self.actionOpen.setObjectName("actionOpen")
        self.actionExit = QtWidgets.QAction(TextEditor)
        self.actionExit.setObjectName("actionExit")
        self.actionCopy = QtWidgets.QAction(TextEditor)
        self.actionCopy.setObjectName("actionCopy")
        self.actionCut = QtWidgets.QAction(TextEditor)
        self.actionCut.setObjectName("actionCut")
        self.actionPaste = QtWidgets.QAction(TextEditor)
        self.actionPaste.setObjectName("actionPaste")
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addAction(self.actionSave_as)
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addAction(self.actionExit)
        self.menuEdit.addAction(self.actionCopy)
        self.menuEdit.addAction(self.actionCut)
        self.menuEdit.addAction(self.actionPaste)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())

        self.retranslateUi(TextEditor)
        QtCore.QMetaObject.connectSlotsByName(TextEditor)

        self.saved = False
        self.file_path = ''

        self.actionCut.triggered.connect(self.cut)
        self.actionCopy.triggered.connect(self.copy)
        self.actionExit.triggered.connect(self.exit_program)
        self.actionPaste.triggered.connect(self.paste)
        self.actionOpen.triggered.connect(self.open)
        self.actionSave.triggered.connect(self.save)
        self.actionSave_as.triggered.connect(self.save_as)

    def retranslateUi(self, TextEditor):
        _translate = QtCore.QCoreApplication.translate
        TextEditor.setWindowTitle(_translate("TextEditor", "Text Editor"))
        self.menuFile.setTitle(_translate("TextEditor", "File"))
        self.menuEdit.setTitle(_translate("TextEditor", "Edit"))
        self.actionSave.setText(_translate("TextEditor", "Save"))
        self.actionSave_as.setText(_translate("TextEditor", "Save as"))
        self.actionOpen.setText(_translate("TextEditor", "Open"))
        self.actionExit.setText(_translate("TextEditor", "Exit"))
        self.actionCopy.setText(_translate("TextEditor", "Copy"))
        self.actionCut.setText(_translate("TextEditor", "Cut"))
        self.actionPaste.setText(_translate("TextEditor", "Paste"))


    def cut(self):
        self.textEdit.cut()

    def copy(self):
        self.textEdit.copy()

    def paste(self):
        self.textEdit.paste()

    def exit_program(self):
        quit()

    def save(self):
        if not self.saved:
            file_name, _ = QtWidgets.QFileDialog.getSaveFileName(self, 'Save Text File', r'C:\\', '*.txt *.py *.cpp *.ui *.js')
            with open(file_name, 'w') as f:
                text = self.textEdit.toPlainText()
                f.write(text)
                self.saved = True
                self.file_path = file_name
        else:
            with open(self.file_path, 'w') as f:
                f.write(self.textEdit.toPlainText())

    def save_as(self):
        file_name, _ = QtWidgets.QFileDialog.getSaveFileName(self, 'Save Text File', r'C:\\', '*.txt *.py *.cpp *.ui *.js')
        with open(file_name, 'w') as f:
            text = self.textEdit.toPlainText()
            f.write(text)
            self.saved = True
            self.file_path = file_name

    def open(self):
        file_name, _= QtWidgets.QFileDialog.getOpenFileName(self, 'Open Text File', r'C:\\', '*.txt *.py *.cpp *.ui *.js')
        with open(file_name, 'r') as f:
            text = f.read()
        self.textEdit.setPlainText(text)

    def check_for_save(self):
        pass
    
    def threaded_check_for_save(self):
        pass
    
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    TextEditor = QtWidgets.QMainWindow()
    ui = Ui_TextEditor()
    ui.setupUi(TextEditor)
    TextEditor.show()
    sys.exit(app.exec_())
